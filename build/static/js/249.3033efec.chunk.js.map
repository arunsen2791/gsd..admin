{"version":3,"sources":["views/apps/walletPage/withdrawalRequest.js"],"names":["withdrawalRequest","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","cellRendererFramework","params","className","src","data","image","alt","height","value","status","size","color","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","JSON","stringify","this","Fragment","breadCrumbTitle","breadCrumbActive","tag","length","right","onClick","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/249.3033efec.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass withdrawalRequest extends React.Component {\r\n  state = {\r\n    rowData: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"UserName\",\r\n        field: \"firstname\",\r\n        width: 175,\r\n        filter: true,\r\n        checkboxSelection: true,\r\n        headerCheckboxSelectionFilteredOnly: true,\r\n        headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"UserId\",\r\n        field: \"UserId\",\r\n        filter: \"agNumberColumnFilter\",\r\n        width: 140,\r\n      },\r\n      //   {\r\n      //     headerName: \"Email\",\r\n      //     field: \"email\",\r\n      //     filter: true,\r\n      //     width: 250,\r\n      //     pinned: window.innerWidth > 992 ? \"left\" : false,\r\n      //   },\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"Date\",\r\n        filter: true,\r\n        width: 250,\r\n      },\r\n      {\r\n        headerName: \"Email\",\r\n        field: \"Email\",\r\n        filter: true,\r\n        width: 150,\r\n      },\r\n      {\r\n        headerName: \"Phone Number\",\r\n        field: \"Number\",\r\n        filter: true,\r\n        width: 150,\r\n      },\r\n      {\r\n        headerName: \"HashTag\",\r\n        field: \"HashTag\",\r\n        filter: true,\r\n        width: 125,\r\n      },\r\n      {\r\n        headerName: \"Payment Method\",\r\n        field: \"Payment Method\",\r\n        filter: \"agNumberColumnFilter\",\r\n        width: 140,\r\n      },\r\n      {\r\n        headerName: \"Image \",\r\n        field: \"image\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <img\r\n                className=\"rounded-circle\"\r\n                src={params.data.image}\r\n                alt=\"user\"\r\n                height=\"45\"\r\n                width=\"90\"\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size={20}\r\n                // onClick={() =>\r\n                //   history.push(`/app/store/stores/viewStore/${params.data._id}`)\r\n                // }\r\n              />\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                // onClick={() =>\r\n                //   history.push(`/app/seller/editSeller/${params.data._id}`)\r\n                // }\r\n              />\r\n              <Trash2\r\n                size={20}\r\n                // onClick={() => {\r\n                //   let selectedData = this.gridApi.getSelectedRows();\r\n                //   this.runthisfunction(params.data._id);\r\n                //   this.gridApi.updateRowData({ remove: selectedData });\r\n                // }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/api/aggrid/data\").then(response => {\r\n      let rowData = response.data.data;\r\n      JSON.stringify(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <Breadcrumbs\r\n          breadCrumbTitle=\"Wallet Table\"\r\n          //   breadCrumbParent=\"Forms & Tables\"\r\n          breadCrumbActive=\"Wallet Table\"\r\n        />\r\n        <Card className=\"overflow-hidden agGrid-card\">\r\n          <CardBody className=\"py-0\">\r\n            {this.state.rowData === null ? null : (\r\n              <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                  <div className=\"mb-1\">\r\n                    <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                      <DropdownToggle tag=\"div\">\r\n                        {this.gridApi\r\n                          ? this.state.currenPageSize\r\n                          : \"\" * this.state.getPageSize -\r\n                            (this.state.getPageSize - 1)}{\" \"}\r\n                        -{\" \"}\r\n                        {this.state.rowData.length -\r\n                          this.state.currenPageSize * this.state.getPageSize >\r\n                        0\r\n                          ? this.state.currenPageSize * this.state.getPageSize\r\n                          : this.state.rowData.length}{\" \"}\r\n                        of {this.state.rowData.length}\r\n                        <ChevronDown className=\"ml-50\" size={15} />\r\n                      </DropdownToggle>\r\n                      <DropdownMenu right>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(20)}\r\n                        >\r\n                          20\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(50)}\r\n                        >\r\n                          50\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(100)}\r\n                        >\r\n                          100\r\n                        </DropdownItem>\r\n                        <DropdownItem\r\n                          tag=\"div\"\r\n                          onClick={() => this.filterSize(134)}\r\n                        >\r\n                          134\r\n                        </DropdownItem>\r\n                      </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                  </div>\r\n                  <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                    <div className=\"table-input mr-1\">\r\n                      <Input\r\n                        placeholder=\"search...\"\r\n                        onChange={e => this.updateSearchQuery(e.target.value)}\r\n                        value={this.state.value}\r\n                      />\r\n                    </div>\r\n                    <div className=\"export-btn\">\r\n                      <Button.Ripple\r\n                        color=\"primary\"\r\n                        onClick={() => this.gridApi.exportDataAsCsv()}\r\n                      >\r\n                        Export as CSV\r\n                      </Button.Ripple>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <ContextLayout.Consumer>\r\n                  {context => (\r\n                    <AgGridReact\r\n                      gridOptions={{}}\r\n                      rowSelection=\"multiple\"\r\n                      defaultColDef={defaultColDef}\r\n                      columnDefs={columnDefs}\r\n                      rowData={rowData}\r\n                      onGridReady={this.onGridReady}\r\n                      colResizeDefault={\"shift\"}\r\n                      animateRows={true}\r\n                      floatingFilter={true}\r\n                      pagination={true}\r\n                      paginationPageSize={this.state.paginationPageSize}\r\n                      pivotPanelShow=\"always\"\r\n                      enableRtl={context.state.direction === \"rtl\"}\r\n                    />\r\n                  )}\r\n                </ContextLayout.Consumer>\r\n              </div>\r\n            )}\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default withdrawalRequest;\r\n"],"sourceRoot":""}