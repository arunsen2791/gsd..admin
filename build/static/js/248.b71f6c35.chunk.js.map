{"version":3,"sources":["views/apps/walletPage/WalletPage.js"],"names":["WalletPage","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","field","width","filter","checkboxSelection","headerCheckboxSelectionFilteredOnly","headerCheckboxSelection","cellRendererFramework","params","className","src","data","image","alt","height","value","status","size","color","onGridReady","gridApi","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","axios","get","then","response","JSON","stringify","this","console","log","sm","onClick","history","push","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component"],"mappings":"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","file":"static/js/248.b71f6c35.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Input,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport { ContextLayout } from \"../../../utility/context/Layout\";\r\nimport { ChevronDown, Edit, Eye, Trash2 } from \"react-feather\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\r\n\r\nimport Breadcrumbs from \"../../../components/@vuexy/breadCrumbs/BreadCrumb\";\r\n\r\nclass WalletPage extends React.Component {\r\n  state = {\r\n    rowData: null,\r\n    paginationPageSize: 20,\r\n    currenPageSize: \"\",\r\n    getPageSize: \"\",\r\n    defaultColDef: {\r\n      sortable: true,\r\n      editable: true,\r\n      resizable: true,\r\n      suppressMenu: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Name\",\r\n        field: \"firstname\",\r\n        width: 175,\r\n        filter: true,\r\n        checkboxSelection: true,\r\n        headerCheckboxSelectionFilteredOnly: true,\r\n        headerCheckboxSelection: true,\r\n      },\r\n      {\r\n        headerName: \"Amount\",\r\n        field: \"zip\",\r\n        filter: \"agNumberColumnFilter\",\r\n        width: 140,\r\n      },\r\n      //   {\r\n      //     headerName: \"Email\",\r\n      //     field: \"email\",\r\n      //     filter: true,\r\n      //     width: 250,\r\n      //     pinned: window.innerWidth > 992 ? \"left\" : false,\r\n      //   },\r\n      {\r\n        headerName: \"Date\",\r\n        field: \"Date\",\r\n        filter: true,\r\n        width: 250,\r\n      },\r\n      //   {\r\n      //     headerName: \"City\",\r\n      //     field: \"city\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Nationality\",\r\n      //     field: \"country\",\r\n      //     filter: true,\r\n      //     width: 150,\r\n      //   },\r\n      //   {\r\n      //     headerName: \"State\",\r\n      //     field: \"state\",\r\n      //     filter: true,\r\n      //     width: 125,\r\n      //   },\r\n      //   {\r\n      //     headerName: \"Aadhar/Virtual Number\",\r\n      //     field: \"zip\",\r\n      //     filter: \"agNumberColumnFilter\",\r\n      //     width: 140,\r\n      //   },\r\n      {\r\n        headerName: \"Image \",\r\n        field: \"image\",\r\n        filter: true,\r\n        width: 120,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"d-flex align-items-center cursor-pointer\">\r\n              <img\r\n                className=\"rounded-circle\"\r\n                src={params.data.image}\r\n                alt=\"user\"\r\n                height=\"45\"\r\n                width=\"90\"\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Status\",\r\n        field: \"status\",\r\n        filter: true,\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return params.value === \"Active\" ? (\r\n            <div className=\"badge badge-pill badge-success\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : params.value === \"Inactive\" ? (\r\n            <div className=\"badge badge-pill badge-warning\">\r\n              {params.data.status}\r\n            </div>\r\n          ) : null;\r\n        },\r\n      },\r\n      {\r\n        headerName: \"Actions\",\r\n        field: \"transactions\",\r\n        width: 150,\r\n        cellRendererFramework: params => {\r\n          return (\r\n            <div className=\"actions cursor-pointer\">\r\n              <Eye\r\n                className=\"mr-50\"\r\n                size={20}\r\n                // onClick={() =>\r\n                //   history.push(`/app/store/stores/viewStore/${params.data._id}`)\r\n                // }\r\n              />\r\n              <Edit\r\n                className=\"mr-50\"\r\n                size=\"25px\"\r\n                color=\"blue\"\r\n                // onClick={() =>\r\n                //   history.push(`/app/seller/editSeller/${params.data._id}`)\r\n                // }\r\n              />\r\n              <Trash2\r\n                size={20}\r\n                // onClick={() => {\r\n                //   let selectedData = this.gridApi.getSelectedRows();\r\n                //   this.runthisfunction(params.data._id);\r\n                //   this.gridApi.updateRowData({ remove: selectedData });\r\n                // }}\r\n              />\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"/api/aggrid/data\").then(response => {\r\n      let rowData = response.data.data;\r\n      JSON.stringify(rowData);\r\n      this.setState({ rowData });\r\n    });\r\n  }\r\n\r\n  onGridReady = params => {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.setState({\r\n      currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\r\n      getPageSize: this.gridApi.paginationGetPageSize(),\r\n      totalPages: this.gridApi.paginationGetTotalPages(),\r\n    });\r\n  };\r\n\r\n  updateSearchQuery = val => {\r\n    this.gridApi.setQuickFilter(val);\r\n  };\r\n\r\n  filterSize = val => {\r\n    if (this.gridApi) {\r\n      this.gridApi.paginationSetPageSize(Number(val));\r\n      this.setState({\r\n        currenPageSize: val,\r\n        getPageSize: val,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { rowData, columnDefs, defaultColDef } = this.state;\r\n    return (\r\n      console.log(rowData),\r\n      (\r\n        <Row className=\"app-user-list\">\r\n          <Col sm=\"12\"></Col>\r\n          <Col sm=\"12\">\r\n            <Card>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 sm=\"6\" className=\"float-left\">\r\n                    Wallet\r\n                  </h1>\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/sellerSubs/addSub\")}\r\n                  >\r\n                    Add\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <CardBody>\r\n                {this.state.rowData === null ? null : (\r\n                  <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\r\n                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\r\n                      <div className=\"mb-1\">\r\n                        <UncontrolledDropdown className=\"p-1 ag-dropdown\">\r\n                          <DropdownToggle tag=\"div\">\r\n                            {this.gridApi\r\n                              ? this.state.currenPageSize\r\n                              : \"\" * this.state.getPageSize -\r\n                                (this.state.getPageSize - 1)}{\" \"}\r\n                            -{\" \"}\r\n                            {this.state.rowData.length -\r\n                              this.state.currenPageSize *\r\n                                this.state.getPageSize >\r\n                            0\r\n                              ? this.state.currenPageSize *\r\n                                this.state.getPageSize\r\n                              : this.state.rowData.length}{\" \"}\r\n                            of {this.state.rowData.length}\r\n                            <ChevronDown className=\"ml-50\" size={15} />\r\n                          </DropdownToggle>\r\n                          <DropdownMenu right>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(20)}\r\n                            >\r\n                              20\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(50)}\r\n                            >\r\n                              50\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(100)}\r\n                            >\r\n                              100\r\n                            </DropdownItem>\r\n                            <DropdownItem\r\n                              tag=\"div\"\r\n                              onClick={() => this.filterSize(134)}\r\n                            >\r\n                              134\r\n                            </DropdownItem>\r\n                          </DropdownMenu>\r\n                        </UncontrolledDropdown>\r\n                      </div>\r\n                      <div className=\"d-flex flex-wrap justify-content-between mb-1\">\r\n                        <div className=\"table-input mr-1\">\r\n                          <Input\r\n                            placeholder=\"search...\"\r\n                            onChange={e =>\r\n                              this.updateSearchQuery(e.target.value)\r\n                            }\r\n                            value={this.state.value}\r\n                          />\r\n                        </div>\r\n                        <div className=\"export-btn\">\r\n                          <Button.Ripple\r\n                            color=\"primary\"\r\n                            onClick={() => this.gridApi.exportDataAsCsv()}\r\n                          >\r\n                            Export as CSV\r\n                          </Button.Ripple>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <ContextLayout.Consumer>\r\n                      {context => (\r\n                        <AgGridReact\r\n                          gridOptions={{}}\r\n                          rowSelection=\"multiple\"\r\n                          defaultColDef={defaultColDef}\r\n                          columnDefs={columnDefs}\r\n                          rowData={rowData}\r\n                          onGridReady={this.onGridReady}\r\n                          colResizeDefault={\"shift\"}\r\n                          animateRows={true}\r\n                          floatingFilter={false}\r\n                          pagination={true}\r\n                          paginationPageSize={this.state.paginationPageSize}\r\n                          pivotPanelShow=\"always\"\r\n                          enableRtl={context.state.direction === \"rtl\"}\r\n                        />\r\n                      )}\r\n                    </ContextLayout.Consumer>\r\n                  </div>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    );\r\n  }\r\n}\r\nexport default WalletPage;\r\n"],"sourceRoot":""}